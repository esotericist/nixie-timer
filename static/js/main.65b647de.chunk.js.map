{"version":3,"sources":["components/App.module.css","components/Digit.module.css","components/Clock.module.css","components/Button.module.css","containers/Timer.js","components/Digit.js","components/Arrow.js","components/Clock.js","components/Button.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","app","buttonContainer","digit","clock","button","ClockContainer","state","h10","h1","m10","m1","s10","s1","getMSec","mSec","Date","_this","getTime","isNaN","Error","setTimeFromMsec","sec","Math","floor","setState","type","value","this","endMSec","tick","newState","nowMSec","remaininMSec","window","requestAnimationFrame","bind","Container","Digit","props","imageSource","process","react_default","a","createElement","className","styles","src","alt","Arrow","unstated_es","to","Timer","timer","onClick","action","Clock","components_Arrow","components_Digit","String","Component","Button","App","components_Clock","components_Button","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65b647de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3sEoq\",\"buttonContainer\":\"App_buttonContainer__lGBYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"digit\":\"Digit_digit__1m6n_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"Clock_clock__2z7Ep\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__193TO\"};","import { Container } from 'unstated'\n\nexport default class ClockContainer extends Container {\n  state = {\n    h10: 0,\n    h1: 0,\n    m10: 0,\n    m1: 3,\n    s10: 0,\n    s1: 0\n  }\n\n  getMSec = () => {\n    const mSec = new Date(\n      '1970/01/01 ' +\n      this.state.h10 + this.state.h1 + ':' +\n      this.state.m10 + this.state.m1 + ':' +\n      this.state.s10 + this.state.s1 + 'Z'\n    ).getTime()\n\n    if (isNaN(mSec)) {\n      throw new Error('Invalid param')\n    }\n    return mSec\n  }\n\n  setTimeFromMsec = mSec => {\n    if (isNaN(mSec)) {\n      throw new Error('Invalid param')\n    }\n    const sec = Math.floor(mSec / 1000)\n    this.setState({\n      h10: Math.floor((sec % 360000) / 36000),\n      h1: Math.floor((sec % 36000) / 3600),\n      m10: Math.floor((sec % 3600) / 600),\n      m1: Math.floor((sec % 600) / 60),\n      s10: Math.floor((sec % 60) / 10),\n      s1: sec % 10\n    })\n  }\n\n  action (type, value) {\n    switch (type) {\n      case 'START':\n        this.endMSec = (new Date()).getTime() + this.getMSec()\n        this.tick()\n        break\n      case 'INCREMENT': {\n        const newState = {}\n        if (value === 'm10' || value === 's10') {\n          newState[value] = (this.state[value] + 1) % 6\n        } else {\n          newState[value] = (this.state[value] + 1) % 10\n        }\n        this.setState(newState)\n        break\n      }\n      case 'DECREMENT': {\n        const newState = {}\n        if (value === 'm10' || value === 's10') {\n          newState[value] = (this.state[value] + 5) % 6\n        } else {\n          newState[value] = (this.state[value] + 9) % 10\n        }\n        this.setState(newState)\n        break\n      }\n      default:\n    }\n  }\n\n  tick () {\n    // endTimeまでの時間を計算してdisplayTimeを更新\n    const nowMSec = new Date().getTime()\n    const remaininMSec = this.endMSec - nowMSec\n    if (remaininMSec >= 0) {\n      this.setTimeFromMsec(remaininMSec)\n      window.requestAnimationFrame(this.tick.bind(this))\n    }\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Digit.module.css'\n\nconst Digit = props => {\n  const imageSource = process.env.PUBLIC_URL + '/images/' + props.value + '.png'\n  return (\n    <div>\n      <img className={styles.digit} src={imageSource} alt={props.value} />\n    </div>\n  )\n}\n\nDigit.propTypes = {\n  value: PropTypes.string.isRequired\n}\n\nexport default Digit\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Subscribe } from 'unstated'\nimport Timer from '../containers/Timer'\n// import styles from './Arrow.module.css'\n\nconst Arrow = props => {\n  const imageSource = (props.type === 'INCREMENT')\n    ? process.env.PUBLIC_URL + '/images/arrow-up.png'\n    : process.env.PUBLIC_URL + '/images/arrow-down.png'\n\n  return (\n    <Subscribe to={[Timer]}>\n      {timer => {\n        return (\n          <img\n            src={imageSource}\n            alt={props.type}\n            onClick={() => {\n              timer.action(props.type, props.value)\n            }}\n          />\n        )\n      }}\n    </Subscribe>\n  )\n}\n\nArrow.propTypes = {\n  type: PropTypes.string.isRequired\n}\n\nexport default Arrow\n","import React, { Component } from 'react'\nimport { Subscribe } from 'unstated'\nimport Timer from '../containers/Timer'\nimport Digit from './Digit'\nimport Arrow from './Arrow'\nimport styles from './Clock.module.css'\n\nclass Clock extends Component {\n  render () {\n    return (\n      <Subscribe to={[Timer]}>\n        {timer => {\n          return (\n            <div className={styles.clock}>\n              <table>\n                <tbody>\n                  <tr>\n                    <td><Arrow type='INCREMENT' value='h10' /></td>\n                    <td><Arrow type='INCREMENT' value='h1' /></td>\n                    <td></td>\n                    <td><Arrow type='INCREMENT' value='m10' /></td>\n                    <td><Arrow type='INCREMENT' value='m1' /></td>\n                    <td></td>\n                    <td><Arrow type='INCREMENT' value='s10' /></td>\n                    <td><Arrow type='INCREMENT' value='s1' /></td>\n                  </tr>\n                  <tr>\n                    <td><Digit value={String(timer.state.h10)} /></td>\n                    <td><Digit value={String(timer.state.h1)} /></td>\n                    <td><Digit value={':'} /></td>\n                    <td><Digit value={String(timer.state.m10)} /></td>\n                    <td><Digit value={String(timer.state.m1)} /></td>\n                    <td><Digit value={':'} /></td>\n                    <td><Digit value={String(timer.state.s10)} /></td>\n                    <td><Digit value={String(timer.state.s1)} /></td>\n                  </tr>\n                  <tr>\n                    <td><Arrow type='DECREMENT' value='h10' /></td>\n                    <td><Arrow type='DECREMENT' value='h1' /></td>\n                    <td></td>\n                    <td><Arrow type='DECREMENT' value='m10' /></td>\n                    <td><Arrow type='DECREMENT' value='m1' /></td>\n                    <td></td>\n                    <td><Arrow type='DECREMENT' value='s10' /></td>\n                    <td><Arrow type='DECREMENT' value='s1' /></td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          )\n        }}\n      </Subscribe>\n    )\n  }\n}\n\nexport default Clock\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Subscribe } from 'unstated'\nimport Timer from '../containers/Timer'\nimport styles from './Button.module.css'\n\nconst Button = props => {\n  return (\n    <Subscribe to={[Timer]}>\n      {timer => {\n        return (\n          <div\n            className={styles.button}\n            onClick={() => timer.action(props.type)}\n          >\n            {props.type}\n          </div>\n        )\n      }}\n    </Subscribe>\n  )\n}\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired\n}\n\nexport default Button\n","import React, { Component } from 'react'\nimport Clock from './Clock'\nimport Button from './Button'\nimport styles from './App.module.css'\n\nclass App extends Component {\n  render () {\n    return (\n      <div className={styles.app} >\n        <div>\n          <Clock />\n          <div className={styles.buttonContainer}>\n            <Button type='START' />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'unstated'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}